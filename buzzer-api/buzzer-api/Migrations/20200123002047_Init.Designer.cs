// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using buzzerApi.Models;

namespace buzzerApi.Migrations
{
    [DbContext(typeof(BuzzerApiContext))]
    [Migration("20200123002047_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("buzzerApi.Models.Propositions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsCorrect");

                    b.Property<Guid>("QuestionId");

                    b.Property<string>("proposition")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Propositions");
                });

            modelBuilder.Entity("buzzerApi.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Interogation")
                        .IsRequired();

                    b.Property<string>("QuestionTypeId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionTypeId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("buzzerApi.Models.QuestionType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("QuestionType");

                    b.HasData(
                        new
                        {
                            Id = "TEXTE",
                            Type = "texte"
                        },
                        new
                        {
                            Id = "AUDIO",
                            Type = "audio"
                        },
                        new
                        {
                            Id = "IMAGE",
                            Type = "image"
                        });
                });

            modelBuilder.Entity("buzzerApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Telephone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("buzzerApi.Models.Propositions", b =>
                {
                    b.HasOne("buzzerApi.Models.Question", "Question")
                        .WithMany("Propositions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("buzzerApi.Models.Question", b =>
                {
                    b.HasOne("buzzerApi.Models.QuestionType", "QuestionType")
                        .WithMany()
                        .HasForeignKey("QuestionTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
